<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[zemin's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://zeminlin.github.io//"/>
  <updated>2016-08-07T04:03:40.020Z</updated>
  <id>http://zeminlin.github.io//</id>
  
  <author>
    <name><![CDATA[zemin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[C#生成CRC8检验码]]></title>
    <link href="http://zeminlin.github.io/2016/08/07/C-%E7%94%9F%E6%88%90CRC8%E6%A3%80%E9%AA%8C%E7%A0%81/"/>
    <id>http://zeminlin.github.io/2016/08/07/C-生成CRC8检验码/</id>
    <published>2016-08-07T04:00:51.000Z</published>
    <updated>2016-08-07T04:03:40.020Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>循环冗余校验(Cyclic Redundancy Check, CRC)是一种根据网络数据包或电脑文件等数据产生简短固定位数校验码的一种散列函数，主要用来检测或校验数据传输或者保存后可能出现的错误。它是利用除法及余数的原理来作错误侦测的。</p>
</blockquote>
<p>在与硬件设备交互过程中，通常会有一定的通讯指令协议，<br>完整指令码 = <strong>包头 + 指令 + 校验码</strong>， 其中应答消息的最后一位也是校验码，如CRC8， CRC16，CRC32。<br>根据CRC算法，将 <code>指令</code> 通过 <code>多项式</code> 计算得出校验码</p>
<p>C#生成CRC8代码实现(参考网络)如下：</p>
<h5 id="方法一：查表法">方法一：查表法</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class CRC8&#10;   &#123;&#10;       private byte[] CRC8Table = new byte[] &#123;&#10;       0,94,188,226,97,63,221,131,194,156,126,32,163,253,31,65,&#10;       157,195,33,127,252,162,64,30, 95,1,227,189,62,96,130,220,&#10;       35,125,159,193,66,28,254,160,225,191,93,3,128,222,60,98,&#10;       190,224,2,92,223,129,99,61,124,34,192,158,29,67,161,255,&#10;       70,24,250,164,39,121,155,197,132,218,56,102,229,187,89,7,&#10;       219,133,103,57,186,228,6,88,25,71,165,251,120,38,196,154,&#10;       101,59,217,135,4,90,184,230,167,249,27,69,198,152,122,36,&#10;       248,166,68,26,153,199,37,123,58,100,134,216,91,5,231,185,&#10;       140,210,48,110,237,179,81,15,78,16,242,172,47,113,147,205,&#10;       17,79,173,243,112,46,204,146,211,141,111,49,178,236,14,80,&#10;       175,241,19,77,206,144,114,44,109,51,209,143,12,82,176,238,&#10;       50,108,142,208,83,13,239,177,240,174,76,18,145,207,45,115,&#10;       202,148,118,40,171,245,23,73,8,86,180,234,105,55,213,139,&#10;       87,9,235,181,54,104,138,212,149,203, 41,119,244,170,72,22,&#10;       233,183,85,11,136,214,52,106,43,117,151,201,74,20,246,168,&#10;       116,42,200,150,21,75,169,247,182,232,10,84,215,137,107,53 &#125;;&#10;&#10;       public byte CRC(byte[] buffer)&#10;       &#123;&#10;           return CRC(buffer, 0, buffer.Length);&#10;       &#125;&#10;&#10;       public byte CRC(byte[] buffer, int off, int len)&#10;       &#123;&#10;           byte crc = 0;&#10;           if (buffer == null)&#10;           &#123;&#10;               throw new ArgumentNullException(&#34;buffer&#34;);&#10;           &#125;&#10;           if (off &#60; 0 || len &#60; 0 || off + len &#62; buffer.Length)&#10;           &#123;&#10;               throw new ArgumentOutOfRangeException();&#10;           &#125;&#10;&#10;           for (int i = off; i &#60; len; i++)&#10;           &#123;&#10;               crc = CRC8Table[crc ^ buffer[i]];&#10;           &#125;&#10;           return crc;&#10;       &#125;&#10;&#125;</span><br></pre></td></tr></table></figure>
<h5 id="方法二">方法二</h5><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">byte</span> <span class="title">CRC8</span><span class="params">(<span class="keyword">byte</span>[] buffer)</span></span><br><span class="line">      </span>&#123;</span><br><span class="line">          <span class="keyword">byte</span> crc = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; buffer.Length; j++)</span><br><span class="line">          &#123;</span><br><span class="line">              crc ^= buffer[j];</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">if</span> ((crc &amp; <span class="number">0x01</span>) != <span class="number">0</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                      crc &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">                      crc ^= <span class="number">0x8c</span>;	<span class="comment">//0x8c是多项式</span></span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                  &#123;</span><br><span class="line">                      crc &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> crc;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>
<p>参考资料：</p>
<blockquote>
<ol>
<li><a href="http://note.jhpeng.com/CSharp_CheckSum/" target="_blank" rel="external">C# 取得 CRC8 CRC16 CRC32</a></li>
<li><a href="http://sanity-free.org/146/crc8_implementation_in_csharp.html" target="_blank" rel="external">A CRC8 implementation in C#</a></li>
</ol>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>循环冗余校验(Cyclic Redundancy Check, CRC)是一种根据网络数据包或电脑文件等数据产生简短固定位数校验码的一种散列函数，主要用来检测或校验数据传输或者保存后可能出现的错误。它是利用除法及余数的原理来作错误侦测的。</p>
]]>
    </summary>
    
      <category term="C#" scheme="http://zeminlin.github.io/tags/C/"/>
    
      <category term="CRC" scheme="http://zeminlin.github.io/tags/CRC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于shadowsocks的扩展以测试科学上网]]></title>
    <link href="http://zeminlin.github.io/2016/07/25/%E5%9F%BA%E4%BA%8Eshadowsocks%E7%9A%84%E6%89%A9%E5%B1%95%E4%BB%A5%E6%B5%8B%E8%AF%95%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://zeminlin.github.io/2016/07/25/基于shadowsocks的扩展以测试科学上网/</id>
    <published>2016-07-25T09:11:05.000Z</published>
    <updated>2016-07-25T09:13:21.099Z</updated>
    <content type="html"><![CDATA[<p><strong>起因</strong>：</p>
<blockquote>
<p><a href="https://getlantern.org/" target="_blank" rel="external">lantern</a> / <a href="https://github.com/getlantern/forum" target="_blank" rel="external">lantern-github</a> (须外网访问，<a href="http://lanterncn.cn/" target="_blank" rel="external">lantern_cn</a>不需要)要下载最新版本才能使用，而且每个月限制800M流量，查资料有时候不太方便</p>
</blockquote>
<hr>
<p>个人科学上网史：<br><code>goagent</code> —&gt; <code>Host修改</code> —&gt; <code>VPN</code> —&gt; <code>shadowsocks</code> —&gt; <code>lantern</code> <strong>…</strong><br> 多数情况下是为了查阅相关资料，像<code>github</code>, <code>google</code>等，已习惯墙内网络，因为已能满足大部分需求。</p>
<p><a href="https://github.com/shadowsocks/shadowsocks-windows/wiki/Shadowsocks-Windows-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">Shadowsocks</a> 是非常方便的科学上网工具,<br>基本使用方法：</p>
<blockquote>
<ul>
<li>在任务栏找到 Shadowsocks 图标</li>
<li>在 服务器 菜单添加多个服务器</li>
<li>选择 启用系统代理 来启用系统代理。请禁用浏览器里的代理插件，或把它们设置为使用系统代理。</li>
<li>除了设为系统代理，你也可以直接自己配置浏览器代理。在 SwitchyOmega 中把代理设置为 SOCKS5 或 HTTP 的 127.0.0.1:1080。这个 1080 端口可以在服务器设置中设置。</li>
</ul>
</blockquote>
<p>想到 <a href="http://www.ishadowsocks.org" target="_blank" rel="external">ishadowsocks</a> 有提供实验账号，且shadowsocks for Windows开放源代码，于是想在V2.5.8主界面基础上添加按钮，一键获取实验账号，用于个人测试科学上网，改善网络。</p>
<p><strong>说明</strong>：</p>
<blockquote>
<ul>
<li>由于添加的代码中使用了硬编码，当iss的地址或者页面修改后，工具不能正常获取实验账号</li>
<li>代码已上传到<code>https://github.com/zeminlin/shadowsocks_windows_extend</code>, 可自行<code>pull</code>下来编译</li>
<li>仅作为个人使用的测试使用，只经过自己的台式机测试(Win10企业版 64位)，未经过大量测试，不保证能正确运行，另外，不打算实现定时获取实验账号</li>
<li>由于使用的人比较多，可能速度比较慢，仅满足基于日常查阅资料</li>
</ul>
</blockquote>
<p>再次感谢 <a href="http://www.ishadowsocks.org" target="_blank" rel="external">ishadowsocks</a> 提供的实验账号！如有侵权之类的，请联系本人删除相关资料, 谢谢。</p>
<hr>
<blockquote>
<p>Tips:可以到 <code>http://pan.baidu.com/s/1hspuj4K</code> 下载，提取密码为<code>gcm9</code>，当然啦，自己 <code>pull</code> 下来编译也挺方便的  </p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>起因</strong>：</p>
<blockquote>
<p><a href="https://getlantern.org/" target="_blank" rel="external">lantern</a> / <a href="https://]]>
    </summary>
    
      <category term="shadowsocks" scheme="http://zeminlin.github.io/tags/shadowsocks/"/>
    
      <category term="科学上网" scheme="http://zeminlin.github.io/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MyFirstPage]]></title>
    <link href="http://zeminlin.github.io/2015/08/09/MyFirstPage/"/>
    <id>http://zeminlin.github.io/2015/08/09/MyFirstPage/</id>
    <published>2015-08-09T02:48:50.000Z</published>
    <updated>2015-08-09T02:50:32.618Z</updated>
    <content type="html"><![CDATA[<p>Hello World, <code>我</code>的第一个页面！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hello World, <code>我</code>的第一个页面！</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://zeminlin.github.io/2015/07/29/hello-world/"/>
    <id>http://zeminlin.github.io/2015/07/29/hello-world/</id>
    <published>2015-07-28T16:29:21.446Z</published>
    <updated>2015-07-28T16:29:21.446Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>